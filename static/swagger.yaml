swagger: '2.0'
info:
  title: 'Advanced E-commerce API'
  description: 'This is an API to manage an E-commerce application'
  version: '1.0.0'
host: '127.0.0.1:5000'
schemes:
  - 'http'
consumes:
  - 'application/json'
produces:
  - 'application/json'
securityDefinitions:
  bearerAuth:
    type: apiKey
    name: Authorization
    in: header
paths:
  /accounts:
    get:
      tags:
        - 'accounts'
      summary: 'List customer accounts'
      description: 'Endpoint for listing customer accounts'
      responses:
        201:
          description: 'OK'
          schema:
            $ref: '#/definitions/GetCustomersResponse'
          examples:
            application/json:
              value:
                id: 1
                username: 'ctm1'
                password: 'password1'
                customer_id: 1
                role: 'user'
      security:
        - bearerAuth: []
  /accounts/login:
    post:
      tags:
        - 'accounts'
      summary: 'Login endpoint'
      description: 'Endpoint for user authentication'
      parameters:
        - in: 'body'
          name: 'body'
          description: 'Credentials for login'
          required: true
          schema:
            $ref: '#/definitions/LoginCredentials'
      responses:
        200:
          description: 'Login successful'
          schema:
            $ref: '#/definitions/LoginResponse'
          examples:
            application/json:
              value:
                auth_token: 'example_auth_token'
                message: 'Login successful'
                status: 'success'
        400:
          description: 'Bad request'
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              value:
                status: 'error'
                message: 'Invalid credentials'
  /accounts/id/<int:id>:
    put:
      tags:
        - 'accounts'
      summary: 'Update account endpoint'
      description: 'Endpoint for updating customer accounts'
      parameters:
        - in: 'body'
          name: 'body'
          description: 'ID of customer account to be updated'
          required: true
          schema: '#/definitions/AccountCredentials'
      responses:
        201:
          description: 'Account successfully updated'
          schema:
            $ref: '#/definitions/AccountUpdatedResponse'
          examples:
            application/json:
              value:
                id: 1
                username: 'ctm1'
                password: 'password1'
                customer_id: 1
                role: 'user'
        400:
          description: 'Bad request'
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              value:
                status: 'error'
                message: 'Invalid credentials'
  /customers:
    get:
      tags:
        - customers
      summary: 'Get All Customers'
      description: 'Retrieve a list of all customers'
      responses:
        200:
          description: 'Successful response'
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/Customer'
        401:
          description: 'Unauthorized'
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              value:
                status: 'error'
                message: 'token is missing | token has expired | invalid token'
        403:
          description: 'Forbidden'
          schema:
            $ref: '#/definitions/Error'
          examples:
            application/json:
              value:
                status: 'error'
                message: 'User does not have the required role'
      security:
        - bearerAuth: []
definitions:
  LoginCredentials:
    type: 'object'
    properties:
      username:
        type: 'string'
        description: 'Username'
      password:
        type: 'string'
        format: 'password'
        description: 'Password'
    required:
      - 'username'
      - 'password'
  LoginResponse:
    type: 'object'
    properties:
      auth_token:
        type: 'string'
        description: 'Authentication token'
      message:
        type: 'string'
        description: 'Message indicating success or failure'
      status:
        type: 'string'
        description: 'Status of the operation'
    required:
      - 'auth_token'
      - 'message'
  GetCustomersResponse:
    type: 'object'
    properties:
      id:
        type: 'integer'
        description: 'Customer ID'
      username:
        type: 'string'
        description: 'Customer username'
      password:
        type: 'string'
        description: 'Customer password'
      customer_id:
        type: 'integer'
        description: "ID of the account's associated customer"
      role:
        type: 'list'
        description: 'role(s) the customer possesses'
    required:
      - 'id'
      - 'username'
      - 'password'
      - 'role' 
  AccountCredentials:
    type: 'object'
    properties:
      id:
        type: 'integer'
        description: 'customer'
    required:
      - 'id'
  AccountUpdatedResponse:
    type: 'object'
    properties:
      id:
        type: 'integer'
        description: 'Customer ID'
      username:
        type: 'string'
        description: 'Customer username'
      password:
        type: 'string'
        description: 'Customer password'
      customer_id:
        type: 'integer'
        description: "ID of the account's associated customer"
      role:
        type: 'list'
        description: 'role(s) the customer possesses'
    required:
      - 'id'
      - 'username'
      - 'password'
      - 'role' 
  Error:
    type: 'object'
    properties:
      status:
        type: 'string'
        description: 'Status of the error'
      message:
        type: 'string'
        description: 'Description of the error'
    required:
      - 'status'
      - 'message'
  Customer:
    type: 'object'
    properties:
      name:
        type: 'string'
        description: "Customer's name"
      email:
        type: 'string'
        description: "Customer's email"
      phone:
        type: 'string'
        description: "Customer's phone number"
      id:
        type: 'integer'
        format: 'int64'
        description: "Customer's unique ID"
    required:
      - 'name'
      - 'email'
      - 'phone'
      - 'id'